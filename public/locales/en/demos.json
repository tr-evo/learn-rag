{
  "common": {
    "processing": "Processing...",
    "generate": "Generate",
    "search": "Search",
    "clear": "Clear",
    "reset": "Reset",
    "run": "Run",
    "stop": "Stop",
    "enabled": "Enabled",
    "disabled": "Disabled",
    "loading": "Loading...",
    "error": "Error",
    "success": "Success",
    "warning": "Warning",
    "info": "Info",
    "submit": "Submit",
    "cancel": "Cancel",
    "save": "Save",
    "delete": "Delete",
    "edit": "Edit",
    "view": "View",
    "close": "Close",
    "open": "Open",
    "select": "Select",
    "configure": "Configure",
    "test": "Test",
    "analyze": "Analyze"
  },
  "sourcePreprocessing": {
    "title": "Source Preprocessing Demo",
    "selectFormat": "Select Source Format",
    "unstructuredFormats": "Unstructured Formats",
    "structuredFormats": "Structured Formats",
    "plainText": "Plain Text",
    "wordDocument": "Word Document",
    "pdfDocument": "PDF Document",
    "scannedDocument": "Scanned Document",
    "imageWithText": "Image with Text",
    "jsonData": "JSON Data",
    "htmlContent": "HTML Content",
    "csvData": "CSV Data",
    "inputText": "Input Text",
    "processedOutput": "Processed Output",
    "processText": "Process Text",
    "processing": "Processing...",
    "selectFormatFirst": "Please select a format first",
    "noTextToProcess": "No text to process",
    "ocrNeeded": "OCR Needed",
    "ocr": "OCR",
    "wellDefinedStructure": "Well-defined structure, easier to process",
    "complexLayouts": "Complex layouts, harder to process",
    "cleanText": "Clean Text",
    "whatsHappening": "What's Happening?",
    "whatsHappeningDescription": "This demo shows how raw source data is preprocessed for a RAG system. Unstructured formats like Word and PDF are challenging due to their complex layouts. Images and scanned documents are not machine-readable and require Optical Character Recognition (OCR) as a preliminary step, which can introduce errors and uncertainty. The preprocessing removes duplicates, cleans up formatting, and extracts relevant text - making the content ready for chunking and embedding.",
    "commonChallenges": "Common Preprocessing Challenges:",
    "nonMachineReadable": "Non-machine readable content",
    "nonMachineReadableDescription": "Images, scanned documents, and handwritten notes require OCR, which can misinterpret characters (confusing \"0\" with \"O\"), miss content entirely, or introduce artifacts.",
    "complexLayoutsChallenge": "Complex layouts",
    "complexLayoutsDescription": "Multi-column text, tables, sidebars, and footnotes in PDFs and Word documents often get scrambled during extraction, losing the logical reading order.",
    "embeddedNonText": "Embedded non-text elements",
    "embeddedNonTextDescription": "Charts, diagrams, and images with important information may be completely lost or replaced with placeholder text.",
    "headersFooters": "Headers and footers",
    "headersFootersDescription": "Repeated page numbers, document titles, and section headers can create noise in the extracted text if not properly cleaned.",
    "formattingArtifacts": "Formatting artifacts",
    "formattingArtifactsDescription": "Special characters, unusual whitespace, and formatting codes can appear in the extracted text, requiring specialized cleaning.",
    "clickArrowToProcess": "Click the arrow to process the text",
    "enterContentPlaceholder": "Enter content here...",
    "processedTextPlaceholder": "Processed text will appear here..."
  },
  "chunkingDesign": {
    "title": "Chunking Strategy Demo",
    "chunkingStrategy": "Chunking Strategy",
    "fixedSize": "Fixed Size",
    "semantic": "Semantic",
    "recursive": "Recursive",
    "chunkSize": "Chunk Size",
    "overlap": "Overlap",
    "generateChunks": "Generate Chunks",
    "chunksGenerated": "Chunks Generated",
    "averageSize": "Average Size",
    "totalChunks": "Total Chunks",
    "overlapNotApplicable": "Overlap is not applicable for this configuration.",
    "overlapNotApplicableHint": "Disable 'Respect paragraph boundaries' to use overlap."
  },
  "embeddingCreation": {
    "title": "Embedding Creation Demo",
    "embeddingModel": "Embedding Model",
    "generateEmbeddings": "Generate Embeddings",
    "searchSimilar": "Search Similar Content",
    "searchPlaceholder": "Enter search query...",
    "searchResults": "Search Results",
    "similarity": "Similarity",
    "dimensions": "Dimensions",
    "quality": "Quality",
    "speed": "Speed",
    "cost": "Cost",
    "lastRefreshed": "Last Refreshed",
    "noEmbeddings": "No embeddings generated yet",
    "generateFirst": "Generate embeddings first",
    "embeddingVisualization": "Embedding Visualization",
    "modelComparison": "Model Comparison",
    "basicModel": "Basic Embedding Model",
    "standardModel": "Standard Embedding Model",
    "advancedModel": "Advanced Embedding Model",
    "low": "Low",
    "medium": "Medium",
    "high": "High",
    "fast": "Fast",
    "slow": "Slow",
    "selectModel": "Select embedding model",
    "textChunks": "Text Chunks",
    "embeddingSpace": "Embedding Space",
    "similaritySearch": "Similarity Search",
    "vectorDimensions": "Vector Dimensions",
    "embeddingQuality": "Embedding Quality",
    "processingSpeed": "Processing Speed",
    "modelCost": "Model Cost",
    "refreshEmbeddings": "Refresh Embeddings",
    "embeddingsGenerated": "Embeddings Generated",
    "searchQuery": "Search Query",
    "embeddingConfiguration": "Embedding Configuration",
    "configureModel": "Choose an embedding model and configure it",
    "chunk": "Chunk",
    "lastUpdated": "Last Updated",
    "embeddingStatus": "Embedding Status",
    "processing": "Processing...",
    "2dProjection": "2D projection of high-dimensional embeddings",
    "technical": "Technical",
    "bestPractice": "Best Practice",
    "financial": "Financial",
    "noteProjection": "This 2D projection shows a simplified view of how {{dimensions}}-dimensional embeddings are arranged in space.",
    "searchWithEmbeddings": "Search with Embeddings",
    "semanticSearchDemo": "Test the semantic search functionality",
    "howSearchWorks": "How Search Works",
    "searchExplanation": "This demo uses a simplified simulation of vector search. Instead of a real embedding model, we use a deterministic algorithm that converts text to vectors based on character codes and text patterns. When you search, we: 1. Generate a simulated vector for your query using our simplified algorithm, 2. Compare it to the simulated vectors of each text chunk using cosine similarity, 3. Return the chunks with the highest similarity scores. This demonstrates the core concept of semantic search while being fast enough to run entirely in your browser.",
    "tryExampleQueries": "Try example queries",
    "enterSearchQuery": "Enter your search query...",
    "searching": "Searching...",
    "search": "Search",
    "clear": "Clear",
    "noEmbeddingsGenerated": "No embeddings generated yet",
    "match": "Match",
    "embeddingModelComparison": "Embedding Model Comparison",
    "compareModels": "Compare different embedding models",
    "modelType": "Model Type",
    "bestFor": "Best For",
    "advantages": "Advantages",
    "disadvantages": "Disadvantages",
    "modelChangeSimulation": "Model Change Simulation",
    "seeModelChange": "See what happens when embedding models are changed",
    "simulateModelChange": "Simulate Model Change",
    "modelChangeDescription": "Simulation: The embedding model has been changed",
    "modelChangeDetected": "Model Change Detected",
    "modelChangeWarning": "Warning: Embedding model changed. All embeddings must be regenerated to avoid inconsistencies.",
    "simulateIncompleteEmbeddings": "Simulate Incomplete Embeddings",
    "incompleteEmbeddingsDescription": "Simulation: Not all chunks have embeddings",
    "incompleteEmbeddingsDetected": "Incomplete Embeddings Detected",
    "incompleteEmbeddingsWarning": "Warning: {{missing}} of {{total}} chunks are missing embeddings. This can lead to incomplete search results.",
    "bestPractices": "Best Practices",
    "implementChangeDetection": "Implement Change Detection",
    "changeDetectionDescription": "Track document changes with timestamps or checksums to identify which embeddings need refreshing. This enables efficient incremental updates rather than full reindexing.",
    "embeddingStrategyRecap": "Embedding Strategy Recap",
    "strategyRecapDescription": "Choose the right embedding model based on your specific needs. Higher dimensions generally provide better semantic understanding but come with increased costs and storage requirements. Refresh embeddings when source content changes to maintain retrieval quality.",
    "smallModels": "Small Models",
    "mediumModels": "Medium Models",
    "largeModels": "Large Models",
    "simpleApplications": "Simple applications",
    "largeDocumentSets": "Large document sets",
    "costSensitiveDeployments": "Cost-sensitive deployments",
    "generalPurposeRAG": "General purpose RAG",
    "balancedApplications": "Balanced applications",
    "mostDocumentation": "Most documentation",
    "complexSemanticTasks": "Complex semantic tasks",
    "specializedDomains": "Specialized domains",
    "highPrecisionRequirements": "High-precision requirements",
    "fastGeneration": "Fast generation",
    "lowerStorageRequirements": "Lower storage requirements",
    "lowerAPICosts": "Lower API costs",
    "lessSemanticPrecision": "Less semantic precision",
    "poorerHandlingOfNuance": "Poorer handling of nuance",
    "mayMissSubtleRelationships": "May miss subtle relationships",
    "goodBalanceQualityCost": "Good balance of quality/cost",
    "reasonableGenerationSpeed": "Reasonable generation speed",
    "goodSemanticUnderstanding": "Good semantic understanding",
    "mayStruggleSpecializedDomains": "May struggle with specialized domains",
    "moderateStorageRequirements": "Moderate storage requirements",
    "mediumAPICosts": "Medium API costs",
    "highestSemanticPrecision": "Highest semantic precision",
    "betterCrossLingualCapabilities": "Better cross-lingual capabilities",
    "betterForComplexQueries": "Better for complex queries",
    "slowerGeneration": "Slower generation",
    "higherStorageRequirements": "Higher storage requirements",
    "higherAPICosts": "Higher API costs"
  },
  "indexing": {
    "title": "Vector Indexing Demo",
    "indexType": "Index Type",
    "flatIndex": "Flat Index",
    "hierarchical": "Hierarchical",
    "buildIndex": "Build Index",
    "indexBuilt": "Index Built",
    "searchTime": "Search Time",
    "accuracy": "Accuracy",
    "memoryUsage": "Memory Usage",
    "indexConfiguration": "Index Configuration",
    "selectIndexType": "Select index type",
    "ivfFlat": "IVF Flat",
    "hnsw": "HNSW",
    "distanceMetric": "Distance Metric",
    "cosineSimilarity": "Cosine Similarity",
    "euclideanDistance": "Euclidean Distance",
    "indexParameters": "Index Parameters",
    "clusters": "Clusters",
    "efConstruction": "EF Construction",
    "efSearch": "EF Search",
    "buildingIndex": "Building Index...",
    "indexReady": "Index Ready",
    "searchPerformance": "Search Performance",
    "indexSize": "Index Size",
    "buildTime": "Build Time",
    "queryLatency": "Query Latency",
    "throughput": "Throughput",
    "memoryFootprint": "Memory Footprint",
    "vectorSearch": "Vector Search",
    "commonIssues": "Common Issues",
    "lastRefreshed": "Last Refreshed",
    "refreshIndex": "Refresh Index",
    "searchVectorIndex": "Search the vector index",
    "searchQuery": "Search Query",
    "selectSampleQuery": "Select a sample query",
    "indexStatus": "Index Status",
    "chunks": "chunks",
    "approximate": "Approximate",
    "exact": "Exact",
    "search": "Search",
    "searching": "Searching...",
    "searchResults": "Search Results",
    "foundResults": "Found {{count}} results in {{time}}ms",
    "runSearchToSeeResults": "Run a search to see results",
    "noSearchResults": "No search results",
    "result": "Result",
    "similarity": "Similarity: {{value}}",
    "distance": "Distance: {{value}}",
    "configureVectorIndexParameters": "Configure vector index parameters",
    "selectDistanceMetric": "Select distance metric",
    "cosineDescription": "Cosine similarity measures the angle between vectors. Good for text similarity.",
    "euclideanDescription": "Euclidean distance measures the straight-line distance between vectors. Good for numerical data.",
    "approximateSearch": "Approximate Search",
    "approximateSearchDescription": "Uses approximate search algorithms for faster results with slightly reduced accuracy.",
    "exactSearchDescription": "Uses exact search for perfect accuracy but slower performance.",
    "small": "Small",
    "medium": "Medium",
    "large": "Large",
    "refreshInterval": "Refresh Interval",
    "seconds": "seconds",
    "frequent": "Frequent",
    "infrequent": "Infrequent",
    "resetToDefaults": "Reset to Defaults",
    "applyRefreshIndex": "Apply & Refresh Index",
    "indexPerformanceCharacteristics": "Index Performance Characteristics",
    "searchSpeed": "Search Speed",
    "fastSearchDescription": "Fast search due to optimized configuration",
    "slowSearchDescription": "Slower search due to exact matching requirements",
    "exactSearchWarning": "Warning: Exact search can be slow on large datasets",
    "resultQuality": "Result Quality",
    "approximateQualityDescription": "Approximate results - may miss some relevant documents",
    "exactQualityDescription": "Exact results - finds all relevant documents",
    "freshness": "Freshness",
    "veryFreshDescription": "Very fresh - index updated frequently",
    "balancedDescription": "Balanced - reasonable freshness and performance",
    "lessFreshDescription": "Less fresh - index updated infrequently",
    "commonIndexingIssues": "Common Indexing Issues",
    "simulateUnderstandProblems": "Simulate and understand common problems",
    "simulateStaleIndex": "Simulate Stale Index",
    "staleIndexDescription": "Index hasn't been updated with recent documents",
    "staleIndexWarning": "Warning: Index is out of date. Recent documents may not appear in search results.",
    "simulatePartialIndex": "Simulate Partial Index",
    "partialIndexDescription": "Only a subset of documents have been indexed",
    "partialIndexWarning": "Warning: Only 60% of documents are indexed. Some content may be missing from search results.",
    "simulateSlowSearch": "Simulate Slow Search",
    "slowSearchWarning": "Warning: Search performance is slow. Consider optimizing index configuration.",
    "bestPracticesVectorIndexing": "Best Practices: Vector Indexing",
    "chooseRightIndexType": "Choose the Right Index Type",
    "chooseIndexTypeDescription": "Different vector databases offer various index types (HNSW, IVF, etc.). Choose based on your dataset size, query patterns, and accuracy requirements. For large datasets, approximate nearest neighbor (ANN) algorithms are usually necessary.",
    "implementRegularRefresh": "Implement Regular Refresh",
    "regularRefreshDescription": "Set up automated index refresh processes that align with your data update frequency. For rapidly changing data, consider incremental updates rather than full rebuilds to maintain freshness without excessive overhead.",
    "monitorIndexHealth": "Monitor Index Health",
    "monitorHealthDescription": "Implement monitoring for index size, query latency, and indexing errors. Set up alerts for failed indexing jobs or performance degradation to catch issues before they affect users.",
    "planForScale": "Plan for Scale",
    "planScaleDescription": "Design your indexing strategy with future growth in mind. Consider sharding, partitioning, or clustering strategies that will allow your index to scale horizontally as your data volume increases.",
    "vectorDatabaseResources": "Vector Database Resources",
    "optimizingVectorSearch": "Learn more about optimizing vector search performance and accuracy.",
    "learnMoreVectorDatabases": "Learn More About Vector Databases"
  },
  "queryUnderstanding": {
    "title": "Query Understanding Demo",
    "userQuery": "User Query",
    "queryAnalysis": "Query Analysis",
    "intent": "Intent",
    "entities": "Entities",
    "keywords": "Keywords",
    "queryExpansion": "Query Expansion",
    "synonyms": "Synonyms",
    "relatedTerms": "Related Terms",
    "sampleQueries": "Sample Queries",
    "customQuery": "Custom Query",
    "enterCustomQuery": "Enter your own query...",
    "processing": "Processing...",
    "processQuery": "Process Query",
    "processingConfiguration": "Processing Configuration",
    "configureProcessing": "Configure how the query is processed",
    "enableQueryRewriting": "Enable Query Rewriting",
    "queryRewritingDesc": "When enabled, the system will attempt to improve the query by rewriting it.",
    "rewritingTechnique": "Rewriting Technique",
    "selectRewritingTechnique": "Select a rewriting technique",
    "expandAcronyms": "Expand Acronyms",
    "addContext": "Add Context",
    "reformulateQuery": "Reformulate Query",
    "expandAcronymsDesc": "Expands acronyms to their full form (e.g., 'API' → 'Application Programming Interface (API)')",
    "addContextDesc": "Adds contextual information to ambiguous queries based on available knowledge",
    "reformulateDesc": "Reformulates the query to be more specific and comprehensive",
    "enablePolicyCheck": "Enable Policy Check",
    "policyCheckDesc": "When enabled, the system will check if the query violates any policies.",
    "whatThisDemoShows": "What This Demo Shows",
    "demoDescription": "This demo illustrates how query understanding techniques can improve retrieval by:",
    "expandingAcronyms": "Expanding acronyms to match full terms in documents",
    "addingContext": "Adding context to ambiguous queries",
    "reformulatingQueries": "Reformulating queries to be more specific",
    "checkingPolicies": "Checking queries against policy guidelines",
    "processingResults": "Processing Results",
    "seeProcessingResults": "See how the query was processed and the resulting search",
    "processQueryToSeeResults": "Process a query to see results",
    "originalQuery": "Original Query",
    "processedQuery": "Processed Query",
    "searchResults": "Search Results",
    "noResultsFound": "No results found",
    "policyViolationDetected": "Policy Violation Detected",
    "policyViolationDesc": "This query appears to violate system policies. In a real system, this might be blocked, logged, or handled according to your security protocols.",
    "selectQueryToSeeResults": "Select a query and click \"Process Query\" to see how query understanding works",
    "queryRewritingTechniques": "Query Rewriting Techniques",
    "differentApproaches": "Different approaches to improve query understanding",
    "queryProcessing": "Query Processing",
    "rewritingTechniques": "Rewriting Techniques",
    "commonChallenges": "Common Challenges",
    "queryInput": "Query Input",
    "selectSampleQuery": "Select a sample query or enter your own",
    "selectSampleQueryPlaceholder": "Select a sample query",
    "selectQueryDefault": "Select a query",
    "activeQuery": "Active Query",
    "noQuerySelected": "No query selected",
    "queryRewritingDescription": "Enable query rewriting to improve queries",
    "expandAcronymsDescription": "Expands acronyms to their full form",
    "addContextDescription": "Adds contextual information to ambiguous queries",
    "reformulateDescription": "Reformulates the query to be more specific",
    "policyCheckDescription": "Checks queries against policy guidelines",
    "demoPoint1": "Expanding acronyms for better document matching",
    "demoPoint2": "Adding context to ambiguous terms",
    "demoPoint3": "Reformulating vague queries",
    "demoPoint4": "Detecting potential policy violations",
    "policyViolationMessage": "This query appears to violate system policies.",
    "selectQueryInstruction": "Select a query and click \"Process Query\"",
    "acronymExpansion": "Acronym Expansion",
    "acronymExpansionDescription": "Expands acronyms and abbreviations to their full form to improve matching with documents that might use either the acronym or the full term.",
    "original": "Original",
    "rewritten": "Rewritten",
    "contextAddition": "Context Addition",
    "contextAdditionDescription": "Adds contextual information to ambiguous queries based on user history, conversation context, or domain knowledge.",
    "queryReformulation": "Query Reformulation",
    "queryReformulationDescription": "Rewrites the query to be more specific, comprehensive, or aligned with the document corpus vocabulary, often using an LLM.",
    "policyChecking": "Policy Checking",
    "policyCheckingExample": "How can I bypass the content filter?",
    "policyCheckingDescription": "Analyzes queries for potential policy violations, security risks, or out-of-scope requests before processing them.",
    "flagged": "Flagged",
    "policyCheckingFlagged": "[POLICY VIOLATION DETECTED] How can I bypass the content filter?",
    "implementationApproaches": "Implementation Approaches",
    "ruleBasedSystems": "Rule-Based Systems",
    "ruleBasedDescription": "Use predefined patterns, dictionaries, and heuristics to identify and transform specific query elements. Fast and predictable, but limited to known patterns.",
    "llmBasedRewriting": "LLM-Based Rewriting",
    "llmBasedDescription": "Use language models to understand and reformulate queries more intelligently. More flexible and powerful, but adds latency and may introduce unexpected changes.",
    "commonQueryChallenges": "Common Query Challenges",
    "issuesAffectingRetrieval": "Issues affecting retrieval quality",
    "ambiguity": "Ambiguity",
    "ambiguityDescription": "Terms with multiple possible meanings can lead to irrelevant results",
    "javaAmbiguityExample": "Java Ambiguity Example",
    "query": "Query",
    "ambiguityLabel": "Ambiguity",
    "javaAmbiguityText": "Could refer to the programming language (Java SDK), the runtime environment (JRE), or even a coffee machine brand.",
    "solution": "Solution",
    "javaAmbiguitySolution": "Use context from conversation history, user profile (e.g., developer vs. non-technical user), or ask for clarification.",
    "vocabularyMismatch": "Vocabulary Mismatch",
    "vocabularyMismatchDescription": "Differences between user vocabulary and document vocabulary",
    "technicalVsLaymanExample": "Technical vs. Layman Language Example",
    "document": "Document",
    "vocabularyMismatchSolution": "Expand queries with synonyms, related terms, or domain-specific vocabulary."
  },
  "hybridRetrieval": {
    "title": "Hybrid Retrieval Demo",
    "retrievalMethod": "Retrieval Method",
    "vectorSearch": "Vector Search",
    "keywordSearch": "Keyword Search",
    "hybridSearch": "Hybrid Search",
    "searchQuery": "Search Query",
    "results": "Results",
    "relevanceScore": "Relevance Score",
    "combineResults": "Combine Results",
    "searchConfiguration": "Search Configuration",
    "selectMethod": "Select retrieval method",
    "fusionMethod": "Fusion Method",
    "weightedCombination": "Weighted Combination",
    "maximumScore": "Maximum Score",
    "sequentialFiltering": "Sequential Filtering",
    "vectorWeight": "Vector Weight",
    "keywordWeight": "Keyword Weight",
    "performSearch": "Perform Search",
    "searchInProgress": "Search in Progress...",
    "vectorResults": "Vector Results",
    "keywordResults": "Keyword Results",
    "fusedResults": "Fused Results",
    "noResultsFound": "No results found",
    "source": "Source",
    "searchComplete": "Search Complete",
    "tryHybridRetrieval": "Try Hybrid Retrieval",
    "searchThroughSampleCollection": "Search through our sample collection using different retrieval methods",
    "search": "Search",
    "advancedMode": "Advanced Mode",
    "selectFusionMethod": "Select fusion method",
    "showVectorSearchResults": "Show Vector Search Results",
    "showKeywordSearchResults": "Show Keyword Search Results",
    "vectorSearchWeight": "Vector Search Weight",
    "keywordBM25Weight": "Keyword BM25 Weight",
    "vector": "Vector",
    "bm25": "BM25",
    "combined": "Combined",
    "documentDate": "Document Date",
    "aboutHybridRetrieval": "About Hybrid Retrieval",
    "aboutDescription": "This demo showcases how different retrieval methods can be combined for more effective document search. Vector search excels at semantic understanding, while BM25 is strong with exact keyword matching. Experiment with different fusion methods to see how they balance precision and recall.",
    "searchResults": "Search Results",
    "configureRetrieval": "Configure Retrieval",
    "searchMethod": "Search Method",
    "selectSearchMethod": "Select search method",
    "vectorSearchDescription": "Uses semantic similarity to find relevant content",
    "keywordSearchDescription": "Uses traditional keyword matching to find relevant content",
    "hybridSearchDescription": "Combines both vector and keyword search for optimal results",
    "fusionConfiguration": "Fusion Configuration",
    "fusionMethodDescription": "How to combine results from different search methods",
    "weightedCombinationDescription": "Combines scores using specified weights for each method",
    "maximumScoreDescription": "Takes the maximum score from either method",
    "sequentialFilteringDescription": "Applies methods sequentially to refine results",
    "adjustWeights": "Adjust Weights",
    "totalWeightMustEqual": "Total weight must equal 1.0",
    "searchParameters": "Search Parameters",
    "numberOfResults": "Number of Results",
    "similarityThreshold": "Similarity Threshold",
    "keywordMatchThreshold": "Keyword Match Threshold",
    "searchTips": "Search Tips",
    "vectorSearchBestFor": "Vector search is best for semantic queries and conceptual matching",
    "keywordSearchBestFor": "Keyword search is best for exact term matching and specific names",
    "hybridSearchBestFor": "Hybrid search combines the strengths of both approaches",
    "analysisOfResults": "Analysis of Results",
    "searchMethodComparison": "Search Method Comparison",
    "methodUsed": "Method Used",
    "resultsFound": "Results Found",
    "averageScore": "Average Score",
    "executionTime": "Execution Time",
    "searchAnalysis": "Search Analysis",
    "vectorOnlyResults": "Vector-Only Results",
    "keywordOnlyResults": "Keyword-Only Results",
    "hybridResults": "Hybrid Results",
    "uniqueToVector": "Unique to Vector",
    "uniqueToKeyword": "Unique to Keyword",
    "foundByBoth": "Found by Both",
    "improvementWithHybrid": "Improvement with Hybrid",
    "hybridRecallImprovement": "Hybrid approach improved recall by {{improvement}}%",
    "hybridPrecisionImprovement": "Hybrid approach improved precision by {{improvement}}%",
    "noImprovementDetected": "No significant improvement detected with hybrid approach",
    "searchResultsBreakdown": "Search Results Breakdown",
    "performSearchToSeeAnalysis": "Perform a search to see detailed analysis"
  },
  "rerankingFusion": {
    "title": "Reranking & Fusion Demo",
    "subtitle": "Combine multiple retrieval methods and improve result quality",
    "reranking": "Reranking",
    "fusion": "Fusion",
    "enableReranking": "Enable Reranking",
    "baseRetrievalMethod": "Base Retrieval Method",
    "selectRetrievalMethod": "Select retrieval method",
    "bm25Keyword": "BM25 (Keyword)",
    "semanticSearch": "Semantic Search",
    "hybridSearch": "Hybrid Search",
    "rerankingMethod": "Reranking Method",
    "selectRerankingMethod": "Select reranking method",
    "weightedScore": "Weighted Score",
    "reciprocalRankFusion": "Reciprocal Rank Fusion (RRF)",
    "rrfTitle": "Reciprocal Rank Fusion",
    "rrfDescription1": "RRF combines results from multiple ranked lists based on document positions rather than scores. For each document, its RRF score is calculated as: Σ 1/(rank + k) across all lists. In production, RRF is used to merge results from different retrieval methods (BM25, vector search). This demo simulates this by using initial ranks and a secondary ranking based on document recency.",
    "rrfDescription2": "This method is particularly effective when you have different retrieval strategies that have different strengths.",
    "relevanceWeight": "Relevance Weight",
    "semanticWeight": "Semantic Weight",
    "recencyWeight": "Recency Weight",
    "results": "Results",
    "rank": "Rank",
    "relevance": "Relevance",
    "semantic": "Semantic",
    "recency": "Recency",
    "rrfScore": "RRF Score",
    "queryOverlap": "Query Overlap",
    "enableFusion": "Enable Fusion",
    "bm25Results": "BM25 Results",
    "semanticResults": "Semantic Results",
    "fusedResults": "Fused Results",
    "relevanceFilter": "Relevance Filter",
    "configureFiltering": "Configure Filtering",
    "permissionChecksDescription": "Permission checks ensure users can only access authorized content",
    "dateFilter": "Date Filter",
    "searchFilteringResults": "Search & Filtering Results",
    "rerankingModel": "Reranking Model",
    "fusionMethod": "Fusion Method",
    "reciprocalRank": "Reciprocal Rank Fusion",
    "weightedSum": "Weighted Sum",
    "rerank": "Rerank Results",
    "originalRanking": "Original Ranking",
    "rerankedResults": "Reranked Results",
    "improvementScore": "Improvement Score",
    "searchQuery": "Search Query",
    "enterSearchQuery": "Enter search query...",
    "searchResults": "Search Results",
    "noReranking": "No Reranking",
    "featureCombination": "Feature Combination",
    "noFusion": "No Fusion",
    "performReranking": "Perform Reranking",
    "relevanceScore": "Relevance Score",
    "source": "Source",
    "rerankingConfiguration": "Reranking Configuration",
    "fusionConfiguration": "Fusion Configuration",
    "selectRerankingModel": "Select reranking model",
    "selectFusionMethod": "Select fusion method",
    "rerankingResults": "Reranking Results",
    "fusionResults": "Fusion Results",
    "originalResults": "Original Results",
    "finalResults": "Final Results"
  },
  "filteringPermissions": {
    "title": "Filtering & Permissions Demo",
    "filteringDemo": "Filtering Demo",
    "permissionChecks": "Permission Checks",
    "commonChallenges": "Common Challenges",
    "userAndQuery": "User & Query",
    "configureUserRole": "Configure user role and query",
    "userRole": "User Role",
    "selectUserRole": "Select user role",
    "accessLevels": "Access Levels",
    "searchQuery": "Search Query",
    "enterQuery": "Enter your query...",
    "searching": "Searching...",
    "searchAndFilter": "Search & Filter",
    "filterConfiguration": "Filter Configuration",
    "enableRelevanceFilter": "Enable Relevance Filter",
    "relevanceThreshold": "Relevance Threshold",
    "enableDateFilter": "Enable Date Filter",
    "dateThreshold": "Date Threshold (Months)",
    "enableCategoryFilter": "Enable Category Filter",
    "selectCategory": "Select category",
    "enablePermissionChecks": "Enable Permission Checks",
    "simulationSettings": "Simulation Settings",
    "simulateOverFiltering": "Simulate Over-filtering",
    "simulateUnderFiltering": "Simulate Under-filtering",
    "overFilteringDescription": "Too strict filters that remove relevant results",
    "underFilteringDescription": "Too weak filters that allow unauthorized content through",
    "searchResults": "Search Results",
    "retrievedResults": "Retrieved Results",
    "filteredResults": "Filtered Results",
    "filteringStatistics": "Filtering Statistics",
    "documentsRetrieved": "Documents Retrieved",
    "documentsFiltered": "Documents Filtered",
    "documentsRemoved": "Documents Removed",
    "removalPercentage": "Removal Rate",
    "accessLevel": "Access Level",
    "relevanceScore": "Relevance Score",
    "category": "Category",
    "lastModified": "Last Modified",
    "permissionDenied": "Permission Denied",
    "accessGranted": "Access Granted",
    "noResultsAfterFiltering": "No results after filtering",
    "adjustFilters": "Adjust filters to get more results",
    "performSearchFirst": "Perform a search first to see results",
    "bestPractices": "Best Practices",
    "implementGranularPermissions": "Implement Granular Permissions",
    "granularPermissionsDescription": "Use detailed permission systems that support different access levels and roles.",
    "balanceSecurityUsability": "Balance Security and Usability",
    "balanceDescription": "Find the right balance between security and user experience when filtering.",
    "auditFilteringDecisions": "Audit Filtering Decisions",
    "auditDescription": "Log filtering decisions for compliance and system improvement.",
    "commonFilteringChallenges": "Common Filtering Challenges",
    "overFilteringProblem": "Over-filtering Problem",
    "overFilteringExplanation": "Too strict filters can remove relevant and authorized content, leading to poor user experience.",
    "underFilteringProblem": "Under-filtering Problem",
    "underFilteringExplanation": "Too weak filters can allow sensitive or unauthorized content through, creating security risks.",
    "permissionComplexity": "Permission Complexity",
    "permissionComplexityExplanation": "Complex organizational structures require sophisticated permission systems that are difficult to manage.",
    "configureFiltering": "Configure Filtering Options",
    "relevanceFilter": "Relevance Filter",
    "minimumRelevanceScore": "Minimum Relevance Score",
    "low": "Low",
    "medium": "Medium",
    "high": "High",
    "dateFilter": "Date Filter",
    "maximumAge": "Maximum Age",
    "months": "Months",
    "categoryFilter": "Category Filter",
    "permissionChecksDescription": "Filters documents based on user access rights",
    "searchFilteringResults": "Search & Filtering Results",
    "resultsAfterFiltering": "{{filtered}} of {{retrieved}} results after filtering",
    "runSearchToSeeResults": "Run a search to see results",
    "configureSearchParameters": "Configure search parameters above and click \"Search & Filter\"",
    "retrievedResultsDescription": "Retrieved from vector index",
    "filteredResultsDescription": "After applying all filters",
    "removedResultsDescription": "Removed by filters",
    "removalRateDescription": "Percentage of results removed",
    "removalRate": "Removal Rate",
    "removedResults": "Removed Results",
    "allResultsFiltered": "All retrieved results were removed by the applied filters. This could be due to:",
    "strictRelevanceThreshold": "Too strict relevance threshold",
    "dateFilterExcluding": "Date filter excluding all documents",
    "categoryFilterRemoving": "Category filter removing all results",
    "userLackingPermission": "User lacking permission for these documents",
    "score": "Score",
    "filteredOutResults": "Filtered Out Results",
    "filteredOut": "Filtered Out",
    "reasonForFiltering": "Reason for Filtering",
    "relevanceBelowThreshold": "Relevance below threshold",
    "documentTooOld": "Document too old",
    "categoryDoesntMatch": "Category doesn't match",
    "userNoPermission": "User has no permission",
    "explorePermissionChecks": "Explore Permission Checks in RAG Systems",
    "howPermissionChecksWork": "How Permission Checks Work",
    "permissionChecksDescription2": "Permission checks ensure users can only access information they are authorized for. This is crucial for security and compliance in enterprise environments.",
    "commonImplementationApproaches": "Common Implementation Approaches",
    "metadataBasedFiltering": "Metadata-Based Filtering",
    "identityProviderIntegration": "Identity Provider Integration",
    "roleBasedAccessControl": "Role-Based Access Control (RBAC)",
    "attributeBasedAccessControl": "Attribute-Based Access Control (ABAC)",
    "documentLevelSecurity": "Document-Level Security",
    "whenPermissionChecksHappen": "When Permission Checks Happen",
    "preRetrieval": "Pre-Retrieval",
    "limitSearchScope": "Limit search scope based on user permissions",
    "postRetrieval": "Post-Retrieval",
    "filterUnauthorizedDocuments": "Filter unauthorized documents from results",
    "hybridApproach": "Hybrid Approach",
    "combineBothApproaches": "Combine both approaches for optimal security and performance",
    "filteringSimulation": "Filtering Simulation",
    "simulateFilteringIssues": "Simulate common filtering issues to understand their impact",
    "overFiltering": "Over-filtering",
    "overFilteringDescription2": "Over-filtering occurs when filters are too strict and remove relevant, authorized content. This leads to poor user experience and reduced system usability.",
    "underFiltering": "Under-filtering",
    "underFilteringDescription2": "Under-filtering occurs when filters are too weak or not properly implemented, allowing sensitive or unauthorized content to be visible to users.",
    "commonCauses": "Common Causes",
    "ignoringPermissionChecks": "Ignoring permission checks for better performance",
    "insufficientPermissionsMetadata": "Insufficient permissions metadata in documents",
    "bugsInAccessControl": "Bugs in access control logic",
    "permissionsNotAligned": "Permissions not aligned with organizational policies",
    "balancingSecurityAndUtility": "Balancing Security and Utility",
    "applyPermissionChecks": "Consistently apply permission checks but monitor performance impact",
    "useAdaptiveThresholds": "Use adaptive thresholds based on user context and content type",
    "provideClearExplanations": "Provide clear explanations when content is filtered",
    "monitorAndAudit": "Monitor and audit filtering decisions for compliance and improvement",
    "tieredApproach": "Use tiered approach with different security levels for different content types",
    "relevanceThresholdTooHigh": "Relevance threshold set too high",
    "overlyRestrictiveDateFilter": "Overly restrictive date filters",
    "tooManyFilters": "Too many filters applied simultaneously",
    "granularPermissions": "Permissions are too granular",
    "admin": "Admin",
    "user": "User",
    "guest": "Guest",
    "filterResults": "Filter Results",
    "permissionCheck": "Permission Check",
    "allowedDocuments": "Allowed Documents",
    "restrictedContent": "Restricted Content",
    "searchDocuments": "Search documents...",
    "all": "All",
    "applyFilters": "Apply Filters",
    "resetFilters": "Reset Filters",
    "documentsFound": "documents found",
    "noDocumentsFound": "No documents found",
    "employee": "Employee",
    "hr": "HR",
    "security": "Security",
    "executive": "Executive",
    "overFilteringWarning": "Over-filtering is blocking relevant financial documents from appearing in results",
    "underFilteringWarning": "Under-filtering is allowing restricted security documents to appear for unauthorized users",
    "overFilteringDesc": "Overly restrictive filters can block relevant content, reducing the usefulness of your RAG system.",
    "underFilteringDesc": "Insufficient filtering can expose sensitive information to unauthorized users, creating security risks.",
    "permissionComplexityDesc": "Complex permission hierarchies can be difficult to implement correctly and may impact system performance.",
    "dynamicPermissions": "Dynamic Permissions",
    "dynamicPermissionsDesc": "Permissions that change based on context, time, or user attributes require sophisticated access control systems."
  },
  "contextAssembly": {
    "title": "Context Assembly Demo",
    "subtitle": "Explore how different context assembly strategies affect the final prompt sent to the LLM",
    "userQuery": "User Query",
    "enterQueryPlaceholder": "Enter your question...",
    "tokenLimit": "Token Limit",
    "tokens": "Tokens",
    "includeMetadata": "Include metadata in context",
    "orderByRelevance": "Order by relevance score",
    "orderByRecency": "Order by recency",
    "retrievedChunks": "Retrieved Chunks",
    "assemblyStrategy": "Assembly Strategy",
    "selectAssemblyStrategy": "Select assembly strategy",
    "assemblyStrategyNotes": "Strategy Notes",
    "simpleStrategyNote": "Simple concatenation preserves all information but may include redundancies and exceed token limits with many chunks.",
    "deduplicatedStrategyNote": "Deduplicated strategy: Similar or duplicate content is removed before assembling chunks.",
    "structuredStrategyNote": "Structured strategy: Chunks are grouped and organized by topics or categories.",
    "summarizedStrategyNote": "Summarized strategy: Long chunks are summarized to fit more information within token limit.",
    "assembledContext": "Assembled Context",
    "tokenLimitExceeded": "Token limit exceeded! Context will be truncated.",
    "promptTemplate": "Prompt Template",
    "selectPromptTemplate": "Select prompt template",
    "promptTemplateNotes": "Template Notes",
    "basicTemplateNote": "Basic templates are simple but may not provide enough guidance to the LLM about how to use the context or handle missing information.",
    "detailedTemplateNote": "Detailed template: Includes specific instructions for response format and style.",
    "sourcedTemplateNote": "Sourced template: Prompts the LLM to cite sources and provide attributions.",
    "finalPromptToLLM": "Final Prompt to LLM",
    "aboutContextAssembly": "About Context Assembly",
    "contextAssemblyDescription": "Context assembly is a critical step in RAG pipelines. The way context is structured, formatted, and presented to the LLM can significantly impact the quality and accuracy of responses. Experiment with different strategies to see what works best for your use case.",
    "selectedChunks": "Selected Chunks",
    "contextWindow": "Context Window",
    "assembleContext": "Assemble Context",
    "contextLength": "Context Length",
    "relevanceOrder": "Relevance Order",
    "chronologicalOrder": "Chronological Order",
    "finalContext": "Final Context",
    "simpleConcatenation": "Simple Concatenation",
    "structuredFormat": "Structured Format",
    "summarizedContext": "Summarized Context",
    "templateFormat": "Template Format",
    "basicTemplate": "Basic Template",
    "detailedTemplate": "Detailed Template",
    "sourceAttribution": "Source Attribution",
    "selectStrategy": "Select assembly strategy",
    "currentTokens": "Current Tokens",
    "contextPreview": "Context Preview",
    "effectiveness": "Effectiveness",
    "good": "Good",
    "veryGood": "Very Good",
    "excellent": "Excellent",
    "chunksSelected": "chunks selected",
    "tokensUsed": "tokens used",
    "assemblyComplete": "Assembly Complete"
  },
  "answerGeneration": {
    "title": "Answer Generation Demo",
    "generateAnswer": "Generate Answer",
    "processing": "Processing...",
    "userQuestion": "User Question",
    "llmResponse": "LLM Response",
    "context": "Context",
    "prompt": "Prompt",
    "systemMessage": "System Message",
    "userMessage": "User Message",
    "temperature": "Temperature",
    "maxTokens": "Max Tokens",
    "responseTime": "Response Time",
    "confidence": "Confidence",
    "sources": "Sources",
    "citations": "Citations",
    "noAnswer": "No answer generated",
    "answerQuality": "Answer Quality",
    "relevance": "Relevance",
    "accuracy": "Accuracy",
    "completeness": "Completeness",
    "clarity": "Clarity",
    "questionSelection": "Question Selection",
    "chooseSampleQuestion": "Choose a sample question or enter your own",
    "selectQuestion": "Select question",
    "llmBehavior": "LLM Behavior",
    "howModelResponds": "How the model responds to different instructions",
    "selectLLMBehavior": "Select LLM behavior",
    "behaviorDescription": "Behavior Description",
    "contextSelection": "Context Selection",
    "informationRetrieved": "Simulates information retrieved from knowledge store",
    "selectContextType": "Select context type",
    "contextPreview": "Context Preview",
    "promptingTechnique": "Prompting Technique",
    "howToInstructModel": "How to instruct the model to deliver the best answer",
    "selectPromptingTechnique": "Select prompting technique",
    "showFullPrompt": "Show Full Prompt",
    "promptTemplate": "Prompt Template",
    "fullPromptContext": "Full Prompt Context",
    "whatSentToLLM": "What is sent to the LLM",
    "generatedAnswer": "Generated Answer",
    "configureSettings": "Configure the settings above and click \"Generate Answer\"",
    "issuesDetected": "Issues Detected",
    "goodResponse": "Good Response",
    "goodResponseDescription": "This response is well-structured, relevant, and provides useful information.",
    "bestPractices": "Best Practices",
    "clearInstructions": "Clear Instructions",
    "clearInstructionsDescription": "Provide explicit instructions about how to use the context, handle uncertainty, and format the response. Specify whether to admit knowledge gaps or stick strictly to provided information.",
    "encourageSourceAttribution": "Encourage Source Attribution",
    "sourceAttributionDescription": "Ask the model to cite or reference the sources of information in its response. This improves transparency and helps users verify information accuracy.",
    "validateOutputs": "Validate Outputs",
    "validateOutputsDescription": "Implement post-processing to check answers against the context. Flag responses that contain information not present in the retrieved documents to catch potential hallucinations.",
    "llmModel": "LLM Model",
    "systemPrompt": "System Prompt",
    "modelConfiguration": "Model Configuration",
    "selectModel": "Select LLM model",
    "gpt4": "GPT-4",
    "claude": "Claude",
    "llama": "Llama",
    "creativity": "Creativity",
    "conservative": "Conservative",
    "balanced": "Balanced",
    "creative": "Creative",
    "responseLength": "Response Length",
    "short": "Short",
    "medium": "Medium",
    "long": "Long",
    "enterQuestion": "Enter your question...",
    "generating": "Generating...",
    "high": "High",
    "citationAccuracy": "Citation Accuracy",
    "contextUsage": "Context Usage",
    "hallucination": "Hallucination Risk",
    "low": "Low",
    "answerGenerated": "Answer Generated Successfully"
  },
  "postProcessing": {
    "title": "Post-processing Demo",
    "processingStep": "Processing Step",
    "factChecking": "Fact Checking",
    "citationAdding": "Citation Adding",
    "formatting": "Formatting",
    "processAnswer": "Process Answer",
    "rawAnswer": "Raw Answer",
    "processedAnswer": "Processed Answer",
    "citations": "Citations"
  },
  "metadataTagging": {
    "title": "Metadata & Tagging Demo",
    "documentMetadata": "Document Metadata",
    "tags": "Tags",
    "category": "Category",
    "author": "Author",
    "dateCreated": "Date Created",
    "addMetadata": "Add Metadata",
    "searchByMetadata": "Search by Metadata",
    "filterByTags": "Filter by Tags",
    "metadataTagging": "Metadata Tagging",
    "searchAndFilter": "Search & Filter",
    "documents": "Documents",
    "items": "items",
    "more": "more",
    "metadataEditor": "Metadata Editor",
    "source": "Source",
    "date": "Date",
    "department": "Department",
    "confidentiality": "Confidentiality",
    "version": "Version",
    "pickDate": "Pick a date",
    "saveMetadata": "Save Metadata",
    "metadataSavedSuccess": "Metadata saved successfully!",
    "searchDocuments": "Search documents...",
    "searchResults": "Search Results",
    "noResults": "No documents found",
    "filterBy": "Filter by",
    "all": "All",
    "resetFilters": "Reset Filters",
    "applyFilters": "Apply Filters",
    "showMissingMetadata": "Show Missing Metadata Issues",
    "showInconsistentMetadata": "Show Inconsistent Metadata Issues",
    "missingMetadataWarning": "Missing confidentiality metadata blocks some documents from appearing in results",
    "inconsistentMetadataWarning": "Inconsistent naming: The department \"Human Resources\" is sometimes tagged as \"HR\", creating separate filter categories",
    "commonChallenges": "Common Challenges",
    "missingMetadata": "Missing Metadata",
    "missingMetadataDesc": "Documents without proper metadata tags become difficult to find and filter, reducing the effectiveness of your RAG system.",
    "inconsistentNaming": "Inconsistent Naming",
    "inconsistentNamingDesc": "The same entity tagged differently (e.g., \"HR\" vs \"Human Resources\") creates fragmented search results and filter categories.",
    "metadataQuality": "Metadata Quality",
    "metadataQualityDesc": "Poor quality metadata with typos, incorrect categories, or outdated information leads to inaccurate filtering and retrieval.",
    "scalingChallenges": "Scaling Challenges",
    "scalingChallengesDesc": "As document collections grow, maintaining consistent metadata standards across different teams and sources becomes increasingly difficult."
  },
  "monitoringEvaluation": {
    "title": "Monitoring & Evaluation Demo",
    "metrics": "Metrics",
    "logging": "Logging",
    "evaluation": "Evaluation",
    "performanceMetrics": "Performance Metrics",
    "updatedHourly": "Updated Hourly",
    "uptime": "Uptime",
    "averageLatency": "Average Latency",
    "userSatisfaction": "User Satisfaction",
    "errorRate": "Error Rate",
    "metricsDescription": "These metrics give you insight into the performance and reliability of your RAG system.",
    "performanceTrends": "Performance Trends",
    "last30Days": "Last 30 Days",
    "trendsDescription": "Track performance trends over time to identify improvement opportunities.",
    "loggingConfiguration": "Logging Configuration",
    "live": "Live",
    "logLevel": "Log Level",
    "selectLogLevel": "Select log level",
    "info": "Info",
    "warning": "Warning",
    "error": "Error",
    "debug": "Debug",
    "logDestination": "Log Destination",
    "selectLogDestination": "Select log destination",
    "console": "Console",
    "file": "File",
    "cloud": "Cloud",
    "sampleLogEntry": "Sample Log Entry",
    "applyChanges": "Apply Changes",
    "evaluationMetrics": "Evaluation Metrics",
    "last1000Answers": "Last 1000 Answers",
    "relevance": "Relevance",
    "accuracy": "Accuracy",
    "coherence": "Coherence",
    "hallucinationRate": "Hallucination Rate",
    "errorRateTrend": "Error Rate Trend",
    "aboutTheseMetrics": "About These Metrics",
    "metricsExplanation": "These evaluation metrics help you understand how well your RAG system is answering user queries and where improvements are possible.",
    "latency": "Latency",
    "throughput": "Throughput",
    "systemHealth": "System Health",
    "performanceMetrics": "Performance Metrics",
    "alerts": "Alerts",
    "responseTime": "Response Time",
    "queriesPerSecond": "Queries per Second",
    "successRate": "Success Rate",
    "averageRating": "Average Rating",
    "systemStatus": "System Status",
    "healthy": "Healthy",
    "critical": "Critical",
    "relevanceScore": "Relevance Score",
    "completenessScore": "Completeness Score",
    "factualAccuracy": "Factual Accuracy",
    "responseQuality": "Response Quality",
    "benchmarkResults": "Benchmark Results",
    "testSuite": "Test Suite",
    "runEvaluation": "Run Evaluation",
    "evaluationComplete": "Evaluation Complete"
  },
  "feedbackLoop": {
    "title": "Feedback Loop Demo",
    "userFeedback": "User Feedback",
    "systemImprovements": "System Improvements",
    "feedbackAnalysis": "Feedback Analysis",
    "implementChanges": "Implement Changes",
    "measureImpact": "Measure Impact",
    "continuousImprovement": "Continuous Improvement",
    "thumbsUp": "Thumbs Up",
    "thumbsDown": "Thumbs Down",
    "provideFeedback": "Provide feedback to improve the system",
    "feedbackReceived": "Feedback Received",
    "analyzingFeedback": "Analyzing Feedback",
    "identifyingIssues": "Identifying Issues",
    "planningImprovements": "Planning Improvements",
    "implementingChanges": "Implementing Changes",
    "measuringResults": "Measuring Results",
    "feedbackCycle": "Feedback Cycle",
    "positiveRating": "Positive Rating",
    "negativeRating": "Negative Rating",
    "improvementSuggestions": "Improvement Suggestions",
    "systemUpdates": "System Updates",
    "performanceGains": "Performance Gains",
    "feedbackForm": "Feedback Form",
    "yourFeedback": "Your Feedback",
    "enterFeedback": "Enter your feedback here ...",
    "rating": "Rating",
    "positive": "Positive",
    "negative": "Negative",
    "userSatisfactionIncrease": "User Satisfaction Increase",
    "bestPractices": "Feedback Loop Best Practices",
    "collectDiverseFeedback": "Collect Diverse Feedback",
    "collectDiverseDescription": "Gather feedback from multiple sources, including user ratings, free-form comments, and system metrics. This provides a comprehensive view of system performance.",
    "analyzeRegularly": "Analyze Feedback Regularly",
    "analyzeRegularlyDescription": "Establish a process for regularly reviewing and analyzing feedback to identify trends, pain points, and areas for improvement.",
    "implementIterative": "Implement Iterative Improvements",
    "implementIterativeDescription": "Use feedback insights to drive iterative improvements to the RAG system, including content updates, prompt refinements, and algorithm adjustments.",
    "whyMatters": "Why Feedback Matters",
    "whyMattersDescription": "Continuous feedback collection is critical for RAG systems. User feedback helps identify retrieval errors, hallucinations, and relevance issues that might not be captured by automated metrics alone. The feedback loop should be designed to be simple, non-intrusive, and provide immediate acknowledgment of the user's input.",
    "submitFeedback": "Submit Feedback"
  },
  "integrations": {
    "title": "RAG Pipeline Flow",
    "pipelineStatus": "Pipeline Status",
    "runPipeline": "Test Pipeline Integration",
    "resetPipeline": "Reset Pipeline",
    "introduceIssue": "Introduce Issue",
    "operational": "Operational",
    "error": "Error",
    "disabled": "Disabled",
    "sharepointConnector": "SharePoint Connector",
    "documentLoader": "Document Loader",
    "embeddingModel": "Embedding Model",
    "vectorDatabase": "Vector Database",
    "llm": "Large Language Model",
    "pipelineRunning": "Pipeline is running...",
    "pipelineSuccess": "Pipeline completed successfully!",
    "pipelineErrors": "Pipeline completed with errors:",
    "integrationTips": "Integration Tips",
    "dataFormatConsistency": "Data Format Consistency",
    "dataFormatDescription": "Ensure that the output format of each component matches the expected input format of the next component in the pipeline.",
    "errorHandling": "Error Handling",
    "errorHandlingDescription": "Implement robust error handling to gracefully manage failures in any component without breaking the entire pipeline.",
    "monitoring": "Monitoring & Logging",
    "monitoringDescription": "Set up comprehensive monitoring and logging to quickly identify and resolve integration issues in production.",
    "standardizedInterfacesDesc": "Ensure that components use compatible data formats and APIs. Consider frameworks such as Respeak or R2R that offer standardised interfaces."
  }
}
